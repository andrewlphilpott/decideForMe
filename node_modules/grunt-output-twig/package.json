{
  "name": "grunt-output-twig",
  "description": "A Grunt plugin to compile npm twig templates. Allows for seamless workflow between frontend prototyping and CRAFT CMS (or similiar) templating",
  "version": "0.1.2",
  "homepage": "https://github.com/kcmcgrath/grunt-output-twig",
  "author": {
    "name": "Kevin McGrath",
    "email": "kcmcg923@yahoo.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kcmcgrath/grunt-output-twig.git"
  },
  "bugs": {
    "url": "https://github.com/kcmcgrath/grunt-output-twig/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/kcmcgrath/grunt-output-twig/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.6.0",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.2.0",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "twig": "~0.7.0"
  },
  "readme": "# grunt-output-twig\n\n> A Grunt version of npm twig. Allows for twig template to be compiled through grunt. The CRAFT CMS (http://buildwithcraft.com) was used for sample templates (and the whole reason I tried to do this in the first place). Not all TWIG capabilities are present, per the npm twig project. Notes on limitations are available here: https://github.com/justjohn/twig.js/wiki/Implementation-Notes\n\n## Changelog\n0.1.2 -- Updated twig to 0.7.0\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-output-twig --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-output-twig');\n```\n\n## The \"output_twig\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `output_twig` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  output_twig: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n});\n```\n\n### Options\n\n#### options.docroot\nType: `String`\nDefault value: null\n\n*Required*. The root path of twig templates. Needed to complete paths for proper include/extend references\n\n#### options.tmpext\nType: `String`\nDefault value: `.html`\n\nThe extension of twig templates. Needed to complete paths for proper include/extend references\n\n#### options.context\nType: `Object`\nDefault value: `{ message : \"Hello World\" }`\n\nAn object containing all variables to pass to twig templates\n\n### Usage Examples\n\n#### Default Options\n\n```js\ngrunt.initConfig({\n  output_twig: {\n    settings: {\n      options: {\n        docroot: 'test/templates/'\n      },\n      files: [\n        {\n          expand: true,\n          cwd: 'test/templates/',\n          src: ['**/*.html','!_**/*', '!**/_*', '!_*'],\n          dest: 'test/output/',\n          ext: '.html'\n        }\n      ]\n    }\n  },\n});\n```\n\n#### Custom Options\nIn this example, custom options are used to return more advanced template variables as thier argument - allowing for rendering of more integrated templates.\n\n```js\ngrunt.initConfig({\n  output_twig: {\n    settings: {\n      options: {\n        docroot: 'test/templates/',\n        tmpext: '.html',\n        context: {\n          url: function(input){ return input; },\n          forms: {\n            errorList: function(input){ return input; }\n          },\n          account: {\n            email: 'email',\n            username: 'user',\n            getErrors: function(input){ return input; }\n          },\n          group: function(input){ return input; },\n          slice: function(input){ return input; }\n        }\n      },\n      files: [\n        {\n          expand: true,\n          cwd: 'test/templates/',\n          src: ['**/*.html','!_**/*', '!**/_*', '!_*'],\n          dest: 'test/output/',\n          ext: '.html'\n        }\n      ]\n    }\n  },\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n",
  "readmeFilename": "README.md",
  "_id": "grunt-output-twig@0.1.2",
  "_from": "grunt-output-twig@latest"
}
